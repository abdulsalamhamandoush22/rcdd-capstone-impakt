{
  "openapi": "3.0.3",
  "info": {
    "title": "Unified API",
    "description": "API endpoints for user authentication, event management, and Google OAuth login",
    "version": "v1"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Local Development Server"
    }
  ],
  "paths": {
    "/api/signup": {
      "post": {
        "summary": "User signup",
        "description": "Allows users to sign up using email and password",
        "requestBody": {
          "description": "User signup details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSignup"
              },
              "example": {
                "name": "John Doe",
                "email": "john.doe@example.com",
                "password": "securepassword",
                "passwordConfirmation": "securepassword"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully signed up user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignupResponse"
                },
                "example": {
                  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImJhMzE1MzIyLTU5ZjMtNDZhOS1hZmRmLTQ3NjIyMmQ1ZTljMCIsImlhdCI6MTYyODE3NjY0N30.CZ62KV_Cb8TWW_YiIxy26Im-UjHaTkA4sPbhw2tJvU8"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (e.g., email already exists, weak password, password mismatch)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Bad request. Email already exists."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Internal server error occurred."
                }
              }
            }
          }
        }
      }
    },
    "/api/login": {
      "post": {
        "summary": "User login",
        "description": "Allows users to log in using email and password",
        "requestBody": {
          "description": "User login details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              },
              "example": {
                "email": "john.doe@example.com",
                "password": "securepassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully logged in user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                },
                "example": {
                  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImJhMzE1MzIyLTU5ZjMtNDZhOS1hZmRmLTQ3NjIyMmQ1ZTljMCIsImlhdCI6MTYyODE3NjY0N30.CZ62KV_Cb8TWW_YiIxy26Im-UjHaTkA4sPbhw2tJvU8"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (e.g., invalid credentials)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Invalid credentials."
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "User not found."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Internal server error occurred."
                }
              }
            }
          }
        }
      }
    },
    "/api/logout": {
      "get": {
        "summary": "User logout",
        "description": "Allows users to log out and clears the JWT cookie",
        "responses": {
          "200": {
            "description": "Successfully logged out user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessMessage"
                },
                "example": {
                  "message": "Successfully logged out."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Internal server error occurred."
                }
              }
            }
          }
        }
      }
    },
    "/user/profile": {
      "get": {
        "summary": "Get user profile",
        "description": "Fetches the authenticated user's profile details",
        "responses": {
          "200": {
            "description": "User profile data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                },
                "example": {
                  "name": "John Doe",
                  "profilePicture": "http://example.com/profile.jpg",
                  "location": "New York, USA",
                  "dateOfBirth": "1990-01-01",
                  "email": "john.doe@example.com",
                  "phoneNumber": "+1 123-456-7890",
                  "interests": "Travel, Photography",
                  "googleAccount": "john.doe@gmail.com"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "User not found."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Internal server error occurred."
                }
              }
            }
          }
        }
      }
    },
    "/user/updateProfile": {
      "patch": {
        "summary": "Update user profile",
        "description": "Allows authenticated users to update their profile information",
        "requestBody": {
          "description": "Updated user profile data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileUpdate"
              },
              "example": {
                "name": "John Doe",
                "location": "New York, USA",
                "phone": "+1 123-456-7890",
                "interests": "Travel, Photography",
                "password": "newsecurepassword",
                "profilePicture": "http://example.com/new_profile.jpg"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessMessage"
                },
                "example": {
                  "message": "Profile updated successfully."
                }
              }
            }
          },
          "400": {
            "description": "Bad request (e.g., new password matches the previous password)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Bad request. New password matches the previous password."
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "User not found."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Internal server error occurred."
                }
              }
            }
          }
        }
      }
    },
    "/forgot-password": {
      "get": {
        "summary": "Forgot Password",
        "description": "Renders the \"Forgot Password\" form"
      },
      "post": {
        "summary": "Handle \"Forgot Password\" form submission",
        "description": "Sends a password reset email to the user's email address",
        "requestBody": {
          "description": "User's email address",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserForgotPassword"
              },
              "example": {
                "email": "john.doe@example.com"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset email sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessMessage"
                },
                "example": {
                  "message": "Password reset email sent successfully."
                }
              }
            }
          },
          "400": {
            "description": "Bad request (e.g., user not found, password reset link expired)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Bad request. User not found."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Internal server error occurred."
                }
              }
            }
          }
        }
      }
    },
    "/reset-password/{token}": {
      "get": {
        "summary": "Password Reset",
        "description": "Renders the \"Password Reset\" form",
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "description": "Password reset token received via email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "post": {
        "summary": "Handle \"Password Reset\" form submission",
        "description": "Resets the user's password based on the password reset token",
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "description": "Password reset token received via email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New password and password confirmation",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserResetPassword"
              },
              "example": {
                "password": "newsecurepassword",
                "confirmPassword": "newsecurepassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessMessage"
                },
                "example": {
                  "message": "Password reset successful."
                }
              }
            }
          },
          "400": {
            "description": "Bad request (e.g., password and confirmation do not match)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Bad request. Password and confirmation do not match."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Internal server error occurred."
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/google": {
      "get": {
        "summary": "Google OAuth login",
        "description": "Initiates the Google OAuth process for login",
        "responses": {
          "302": {
            "description": "Redirects to Google login page for authentication"
          }
        }
      }
    },
    "/api/auth/google/callback": {
      "get": {
        "summary": "Google OAuth callback",
        "description": "Handles the callback after successful Google OAuth authentication",
        "responses": {
          "302": {
            "description": "Redirects back to the application after successful authentication"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "error": "Internal server error occurred."
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserSignup": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          },
          "passwordConfirmation": {
            "type": "string"
          }
        }
      },
      "UserLogin": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "SignupResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        }
      },
      "UserForgotPassword": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          }
        }
      },
      "UserResetPassword": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          },
          "confirmPassword": {
            "type": "string"
          }
        }
      },
      "UserProfile": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "profilePicture": {
            "type": "string",
            "format": "url"
          },
          "location": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "phoneNumber": {
            "type": "string"
          },
          "interests": {
            "type": "string"
          },
          "googleAccount": {
            "type": "string"
          }
        }
      },
      "UserProfileUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "interests": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "profilePicture": {
            "type": "string",
            "format": "url"
          }
        }
      },
      "SuccessMessage": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        }
      }
    }
  }
}
